// <auto-generated />
using System;
using FakeFacebook.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FakeFacebook.Migrations
{
    [DbContext(typeof(FakeFacebookDbContext))]
    partial class FakeFacebookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FakeFacebook.Models.ChatContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_TIME");

                    b.Property<int>("FileCode")
                        .HasColumnType("int")
                        .HasColumnName("FILE_CODE");

                    b.Property<int>("GroupChatId")
                        .HasColumnType("int")
                        .HasColumnName("GROUP_CHAT_ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_TIME");

                    b.HasKey("Id")
                        .HasName("PK_CHAT_CONTENT");

                    b.ToTable("CHAT_CONTENT");
                });

            modelBuilder.Entity("FakeFacebook.Models.ChatGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_TIME");

                    b.Property<string>("GroupAvartar")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GROUP_AVARTAR");

                    b.Property<bool>("GroupDouble")
                        .HasColumnType("bit")
                        .HasColumnName("GROUP_DOUBLE");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GROUP_NAME");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("QUANTITY");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("STATUS");

                    b.HasKey("Id")
                        .HasName("PK_CHAT_GROUPS");

                    b.ToTable("CHAT_GROUPS");
                });

            modelBuilder.Entity("FakeFacebook.Models.FeelingPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<bool>("Like")
                        .HasColumnType("bit")
                        .HasColumnName("LIKE");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("POST_ID");

                    b.HasKey("Id")
                        .HasName("PK_FEELING_POST");

                    b.ToTable("FEELING_POST");
                });

            modelBuilder.Entity("FakeFacebook.Models.FileChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_TIME");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int")
                        .HasColumnName("DELETED_BY");

                    b.Property<int>("FileCode")
                        .HasColumnType("int")
                        .HasColumnName("FILE_CODE");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<string>("NameExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME_EXTENSION");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PATH");

                    b.Property<string>("ServerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SERVER_CODE");

                    b.Property<long?>("Size")
                        .HasColumnType("bigint")
                        .HasColumnName("SIZE");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TYPE");

                    b.HasKey("Id")
                        .HasName("PK_FILE_CHAT");

                    b.ToTable("FILE_CHAT");
                });

            modelBuilder.Entity("FakeFacebook.Models.FileInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("CODE");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_TIME");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PATH");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TYPE");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_TIME");

                    b.HasKey("Id")
                        .HasName("PK_FILE_INFORMATION");

                    b.ToTable("FILE_INFORMATION");
                });

            modelBuilder.Entity("FakeFacebook.Models.FriendDouble", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_TIME");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("STATUS");

                    b.Property<int>("UserCode1")
                        .HasColumnType("int")
                        .HasColumnName("USER_CODE1");

                    b.Property<int>("UserCode2")
                        .HasColumnType("int")
                        .HasColumnName("USER_CODE2");

                    b.HasKey("Id")
                        .HasName("PK_FRIENDS_DOUBLE");

                    b.ToTable("FRIENDS_DOUBLE");
                });

            modelBuilder.Entity("FakeFacebook.Models.GroupMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int")
                        .HasColumnName("DELETED_BY");

                    b.Property<DateTime>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DELETED_TIME");

                    b.Property<int>("GroupChatId")
                        .HasColumnType("int")
                        .HasColumnName("GROUP_CHAT_ID");

                    b.Property<int>("InvitedBy")
                        .HasColumnType("int")
                        .HasColumnName("INVITED_BY");

                    b.Property<DateTime>("InvitedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("INVITED_TIME");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED");

                    b.Property<int?>("MemberCode")
                        .HasColumnType("int")
                        .HasColumnName("MEMBER_CODE");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("STATUS");

                    b.HasKey("Id")
                        .HasName("PK_GROUP_MEMBER");

                    b.ToTable("GROUP_MEMBER");
                });

            modelBuilder.Entity("FakeFacebook.Models.PostComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_TIME");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED");

                    b.Property<int>("PostCode")
                        .HasColumnType("int")
                        .HasColumnName("POST_CODE");

                    b.HasKey("Id")
                        .HasName("PK_POST_COMMENT");

                    b.ToTable("POST_COMMENT");
                });

            modelBuilder.Entity("FakeFacebook.Models.Posts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommentNumber")
                        .HasColumnType("int")
                        .HasColumnName("COMMENT_NUMBER");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_TIME");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED");

                    b.Property<int>("LikeNumber")
                        .HasColumnType("int")
                        .HasColumnName("LIKE_NUMBER");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("STATUS");

                    b.HasKey("Id")
                        .HasName("PK_POSTS");

                    b.ToTable("POSTS");
                });

            modelBuilder.Entity("FakeFacebook.Models.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_TIME");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED");

                    b.Property<bool?>("IsEncryption")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ENCRYPTION");

                    b.Property<string>("Permission")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PERMISSION");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ROLE");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_TIME");

                    b.Property<int>("UserCode")
                        .HasColumnType("int")
                        .HasColumnName("USER_CODE");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USER_NAME");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USER_PASSWORD");

                    b.HasKey("Id")
                        .HasName("PK_USER_ACCOUNT");

                    b.ToTable("USER_ACCOUNT");
                });

            modelBuilder.Entity("FakeFacebook.Models.UserInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AVATAR");

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BIRTHDAY");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_TIME");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("FileCode")
                        .HasColumnType("int")
                        .HasColumnName("FILE_CODE");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED");

                    b.Property<bool?>("IsEncryption")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ENCRYPTION");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_TIME");

                    b.HasKey("Id")
                        .HasName("PK_USER_INFORMATION");

                    b.ToTable("USER_INFORMATION");
                });
#pragma warning restore 612, 618
        }
    }
}
